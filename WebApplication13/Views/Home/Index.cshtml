<div>
    <h1>Login</h1>
    <form id="loginForm">
    <input type="email" name="email" placeholder="Email" required />
    <input type="password" name="password" placeholder="Password" required />
    <button type="submit">Login</button>
        <style>
            body {
                margin: 0;
                padding: 0;
                font-family: Arial, sans-serif;
                background-color: #f4f0ff; /* Светло-фиолетовый фон */
                display: flex;
                align-items: center;
                justify-content: center;
                height: 100vh;
            }

            .form-container {
                width: 100%;
                max-width: 400px;
                background-color: #ffffff; /* Белый фон */
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

            h1 {
                text-align: center;
                color: #6a0dad; /* Фиолетовый */
            }

            h3 {
                text-align: center;
                color: #6a0dad; /* Фиолетовый */
            }

            form {
                display: flex;
                flex-direction: column;
            }

            input {
                margin-bottom: 15px;
                padding: 10px;
                border: 1px solid #d3c3f3; /* Светло-фиолетовая рамка */
                border-radius: 4px;
                font-size: 14px;
            }

            button {
                background-color: #6a0dad; /* Фиолетовая кнопка */
                color: white;
                border: none;
                border-radius: 4px;
                padding: 10px;
                font-size: 16px;
                cursor: pointer;
            }

                button:hover {
                    background-color: #4b0082; /* Темно-фиолетовый при наведении */
                }

            p {
                text-align: center;
                color: #4b0082;
            }

                p a {
                    color: #6a0dad;
                    text-decoration: none;
                }

                    p a:hover {
                        text-decoration: underline;
                    }
        </style>
</form>
    <p>Don't have an account? <a href="/Home/Register">Register here</a></p>
    <h3>Или войдите через:</h3>
    <P><a href="/api/auth/signin-google">Google</a></P>
    
</div>

<script>
    document.getElementById('loginForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        const urlParams = new URLSearchParams(window.location.search);
        const token = urlParams.get('token');

        if (token) {
            // Сохранение токена в localStorage
            localStorage.setItem('token', token);

            // Удаление токена из URL
            const cleanUrl = window.location.origin + window.location.pathname;
            window.history.replaceState({}, document.title, cleanUrl);
        } else {
            console.error("Token not found in URL");
        }
        const email = e.target.email.value;
        const password = e.target.password.value;

        if (!email || !password) {
            alert('Please fill in both email and password.');
            return;
        }

        try {
            const response = await fetch('/api/auth/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    email: email,
                    passwordHash: password
                })
            });

            const result = await response.json();

            if (response.ok) {
                alert('Login successful');

                // Сохраняем токен в localStorage
                localStorage.setItem('token', result.token);

                // Перенаправляем пользователя
                window.location.href = `/Home/Messages?token=${result.token}`;
            } else {
                alert(`Login failed: ${result.message || 'Unexpected error'}`);
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred during login. Please try again.');
        }
    });

    // Функция для выполнения запросов с токеном
    async function fetchWithAuth(url, options = {}) {
        const token = localStorage.getItem('token');
        if (!token) {
            alert('No token found. Please log in.');
            window.location.href = '/';
            return;
        }

        const headers = {
            ...options.headers,
            Authorization: `Bearer ${token}`, // Добавляем токен в заголовок
            'Content-Type': 'application/json'
        };

        return fetch(url, { ...options, headers });
    }


    // Пример: Автоматическая загрузка данных после авторизации
    document.addEventListener('DOMContentLoaded', () => {
        const urlParams = new URLSearchParams(window.location.search);
        const token = urlParams.get('token');
        if (token) {
            localStorage.setItem('token', token);           
        } 

        
    });




</script>


